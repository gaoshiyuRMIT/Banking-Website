@model TransferViewModel
@{
    ViewData["Title"] = "Transfer";
}
<div class="row">
    <div class="col-md-4">
        @if (Model.OperationStatus == OperationStatus.Successful)
        {
            <span class="text-success">Operation is successful!</span>
        }
        <form asp-action="Transfer">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="AccountType" class="control-label"></label>
                <select asp-for="AccountType" asp-items="Model.AccountTypes"></select>
                <label asp-for="DestAccountNumber" class="control-label"></label>
                <input asp-for="DestAccountNumber" class="form-control" value="@Model.DestAccountNumber.ToString()"
                       data-val="true" data-val-number="The DestAccountNumber field must be a number."
                       data-val-required="The DestAccountNumber field is required." />
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" value="@Model.Amount.ToString("0.00")"
                       data-val="true" data-val-number="The field Amount must be a number."
                       data-val-required="The Amount field is required." />
                @Html.ValidationMessage("Amount", new { @class = "text-danger" })
                <label asp-for="Comment" class="control-label"></label>
                <input id="Comment" name="Comment" type="text" class="form-control"
                       data-val="true" data-val-required="The Password field is required." />

            </div>
            <div class="form-group">
                <input type="submit" value="Transfer" class="btn btn-primary" />
            </div>
        </form>

    </div>
</div>
<div>
    <a asp-action="Index">Cancel Transfer</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}